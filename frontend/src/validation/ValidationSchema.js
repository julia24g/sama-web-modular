import * as yup from 'yup';
import { zipcodeValidation, createMonthlyLoadValidation, createRateValidation, createAnnualLoadValidation, percentageValidation, wholeNumberValidation, positiveNumberValidation, timeRangeValidation, systemTypeValidation } from './ValidationUtils';

export const baseValidationSchema = yup.object({
    zipcode: zipcodeValidation,
    isAnnual: yup.boolean(),
    foundLoad: yup.boolean(),
    annualTotalLoad: createAnnualLoadValidation,
    monthlyLoad1: createMonthlyLoadValidation,
    monthlyLoad2: createMonthlyLoadValidation,
    monthlyLoad3: createMonthlyLoadValidation,
    monthlyLoad4: createMonthlyLoadValidation,
    monthlyLoad5: createMonthlyLoadValidation,
    monthlyLoad6: createMonthlyLoadValidation,
    monthlyLoad7: createMonthlyLoadValidation,
    monthlyLoad8: createMonthlyLoadValidation,
    monthlyLoad9: createMonthlyLoadValidation,
    monthlyLoad10: createMonthlyLoadValidation,
    monthlyLoad11: createMonthlyLoadValidation,
    monthlyLoad12: createMonthlyLoadValidation,
    rateStructure: yup.string()
        .required('Selecting a rate structure is required'),
    flatRate: createRateValidation('Flat Rate'),
    seasonalRateField1: createRateValidation('Seasonal Rate'),
    seasonalRateField2: createRateValidation('Seasonal Rate'),
    monthlyRate1: createRateValidation('Monthly Rate'),
    monthlyRate2: createRateValidation('Monthly Rate'),
    monthlyRate3: createRateValidation('Monthly Rate'),
    monthlyRate4: createRateValidation('Monthly Rate'),
    monthlyRate5: createRateValidation('Monthly Rate'),
    monthlyRate6: createRateValidation('Monthly Rate'),
    monthlyRate7: createRateValidation('Monthly Rate'),
    monthlyRate8: createRateValidation('Monthly Rate'),
    monthlyRate9: createRateValidation('Monthly Rate'),
    monthlyRate10: createRateValidation('Monthly Rate'),
    monthlyRate11: createRateValidation('Monthly Rate'),
    monthlyRate12: createRateValidation('Monthly Rate'),
    lowTierPrice: createRateValidation('Tiered Rate'),
    lowTierMaxLoad: createRateValidation('Tiered Rate'),
    mediumTierPrice: createRateValidation('Tiered Rate'),
    mediumTierMaxLoad: createRateValidation('Tiered Rate'),
    highTierPrice: createRateValidation('Tiered Rate'),
    highTierMaxLoad: createRateValidation('Tiered Rate'),
    summerLowTierPrice: createRateValidation('Seasonal Tiered Rate'),
    summerLowTierMaxLoad: createRateValidation('Seasonal Tiered Rate'),
    summerMediumTierPrice: createRateValidation('Seasonal Tiered Rate'),
    summerMediumTierMaxLoad: createRateValidation('Seasonal Tiered Rate'),
    summerHighTierPrice: createRateValidation('Seasonal Tiered Rate'),
    summerHighTierMaxLoad: createRateValidation('Seasonal Tiered Rate'),
    winterLowTierPrice: createRateValidation('Seasonal Tiered Rate'),
    winterLowTierMaxLoad: createRateValidation('Seasonal Tiered Rate'),
    winterMediumTierPrice: createRateValidation('Seasonal Tiered Rate'),
    winterMediumTierMaxLoad: createRateValidation('Seasonal Tiered Rate'),
    winterHighTierPrice: createRateValidation('Seasonal Tiered Rate'),
    winterHighTierMaxLoad: createRateValidation('Seasonal Tiered Rate'),
    januaryLowPrice: createRateValidation('Monthly Tiered Rate'),
    januaryLowMaxLoad: createRateValidation('Monthly Tiered Rate'),
    januaryMedPrice: createRateValidation('Monthly Tiered Rate'),
    januaryMedMaxLoad: createRateValidation('Monthly Tiered Rate'),
    januaryHighPrice: createRateValidation('Monthly Tiered Rate'),
    januaryHighMaxLoad: createRateValidation('Monthly Tiered Rate'),
    februaryLowPrice: createRateValidation('Monthly Tiered Rate'),
    februaryLowMaxLoad: createRateValidation('Monthly Tiered Rate'),
    februaryMedPrice: createRateValidation('Monthly Tiered Rate'),
    februaryMedMaxLoad: createRateValidation('Monthly Tiered Rate'),
    februaryHighPrice: createRateValidation('Monthly Tiered Rate'),
    februaryHighMaxLoad: createRateValidation('Monthly Tiered Rate'),
    marchLowPrice: createRateValidation('Monthly Tiered Rate'),
    marchLowMaxLoad: createRateValidation('Monthly Tiered Rate'),
    marchMedPrice: createRateValidation('Monthly Tiered Rate'),
    marchMedMaxLoad: createRateValidation('Monthly Tiered Rate'),
    marchHighPrice: createRateValidation('Monthly Tiered Rate'),
    marchHighMaxLoad: createRateValidation('Monthly Tiered Rate'),
    aprilLowPrice: createRateValidation('Monthly Tiered Rate'),
    aprilLowMaxLoad: createRateValidation('Monthly Tiered Rate'),
    aprilMedPrice: createRateValidation('Monthly Tiered Rate'),
    aprilMedMaxLoad: createRateValidation('Monthly Tiered Rate'),
    aprilHighPrice: createRateValidation('Monthly Tiered Rate'),
    aprilHighMaxLoad: createRateValidation('Monthly Tiered Rate'),
    mayLowPrice: createRateValidation('Monthly Tiered Rate'),
    mayLowMaxLoad: createRateValidation('Monthly Tiered Rate'),
    mayMedrice: createRateValidation('Monthly Tiered Rate'),
    mayMedMaxLoad: createRateValidation('Monthly Tiered Rate'),
    mayHighPrice: createRateValidation('Monthly Tiered Rate'),
    mayHighMaxLoad: createRateValidation('Monthly Tiered Rate'),
    juneLowPrice: createRateValidation('Monthly Tiered Rate'),
    juneLowMaxLoad: createRateValidation('Monthly Tiered Rate'),
    juneMedPrice: createRateValidation('Monthly Tiered Rate'),
    juneMedMaxLoad: createRateValidation('Monthly Tiered Rate'),
    juneHighPrice: createRateValidation('Monthly Tiered Rate'),
    juneHighMaxLoad: createRateValidation('Monthly Tiered Rate'),
    julyLowPrice: createRateValidation('Monthly Tiered Rate'),
    julyLowMaxLoad: createRateValidation('Monthly Tiered Rate'),
    julyMedPrice: createRateValidation('Monthly Tiered Rate'),
    julyMedMaxLoad: createRateValidation('Monthly Tiered Rate'),
    julyHighPrice: createRateValidation('Monthly Tiered Rate'),
    julyHighMaxLoad: createRateValidation('Monthly Tiered Rate'),
    augustLowPrice: createRateValidation('Monthly Tiered Rate'),
    augustLowMaxLoad: createRateValidation('Monthly Tiered Rate'),
    augustMedPrice: createRateValidation('Monthly Tiered Rate'),
    augustMedMaxLoad: createRateValidation('Monthly Tiered Rate'),
    augustHighPrice: createRateValidation('Monthly Tiered Rate'),
    augustHighMaxLoad: createRateValidation('Monthly Tiered Rate'),
    septemberLowPrice: createRateValidation('Monthly Tiered Rate'),
    septemberLowMaxLoad: createRateValidation('Monthly Tiered Rate'),
    septemberMedPrice: createRateValidation('Monthly Tiered Rate'),
    septemberMedMaxLoad: createRateValidation('Monthly Tiered Rate'),
    septemberHighPrice: createRateValidation('Monthly Tiered Rate'),
    septemberHighMaxLoad: createRateValidation('Monthly Tiered Rate'),
    octoberLowPrice: createRateValidation('Monthly Tiered Rate'),
    octoberLowMaxLoad: createRateValidation('Monthly Tiered Rate'),
    octoberMedPrice: createRateValidation('Monthly Tiered Rate'),
    octoberMedMaxLoad: createRateValidation('Monthly Tiered Rate'),
    octoberHighPrice: createRateValidation('Monthly Tiered Rate'),
    octoberHighMaxLoad: createRateValidation('Monthly Tiered Rate'),
    novemberLowPrice: createRateValidation('Monthly Tiered Rate'),
    novemberLowMaxLoad: createRateValidation('Monthly Tiered Rate'),
    novemberMedPrice: createRateValidation('Monthly Tiered Rate'),
    novemberMedMaxLoad: createRateValidation('Monthly Tiered Rate'),
    novemberHighPrice: createRateValidation('Monthly Tiered Rate'),
    novemberHighMaxLoad: createRateValidation('Monthly Tiered Rate'),
    decemberLowPrice: createRateValidation('Monthly Tiered Rate'),
    decemberLowMaxLoad: createRateValidation('Monthly Tiered Rate'),
    decemberMedPrice: createRateValidation('Monthly Tiered Rate'),
    decemberMedMaxLoad: createRateValidation('Monthly Tiered Rate'),
    decemberHighPrice: createRateValidation('Monthly Tiered Rate'),
    decemberHighMaxLoad: createRateValidation('Monthly Tiered Rate'),
    summerOnPeakPrice: createRateValidation('Time of Use'),
    summerMidPeakPrice: createRateValidation('Time of Use'),
    summerOffPeakPrice: createRateValidation('Time of Use'),
    winterOnPeakPrice: createRateValidation('Time of Use'),
    winterMidPeakPrice: createRateValidation('Time of Use'),
    winterOffPeakPrice: createRateValidation('Time of Use'),
    summerOnTimeRange: yup.array().of(timeRangeValidation),
    summerMidTimeRange: yup.array().of(timeRangeValidation),
    winterOnTimeRange: yup.array().of(timeRangeValidation),
    winterMidTimeRange: yup.array().of(timeRangeValidation),
    tilt: yup.number().required(),
    azimuth: yup.number().required()
});

export const advancedValidationSchema = baseValidationSchema.shape({
    connectedToGrid: yup.boolean().required(),
    netMetered: yup.boolean().required(),
    n: wholeNumberValidation,
    LPSP_max_rate: percentageValidation,
    RE_min_rate: percentageValidation,
    e_ir_rate: percentageValidation,
    n_ir_rate: percentageValidation,
    ir: percentageValidation,
    re_incentives_rate: percentageValidation,
    // PV Questions
    PVCost: positiveNumberValidation,
    PVReplacementCost: positiveNumberValidation,
    PVOandM: positiveNumberValidation,
    PVLifetime: wholeNumberValidation,
    C_B: positiveNumberValidation,
    R_B: positiveNumberValidation,
    tilt: yup.number().required(),
    azimuth: yup.number().required(),
    // Battery Questions
    isLithium: yup.boolean(),
    batteryOandM: positiveNumberValidation,
    batteryYearlyDegradation: positiveNumberValidation,
    SOC_min: positiveNumberValidation,
    SOC_max: positiveNumberValidation,
    batteryVoltage: positiveNumberValidation,
    // Diesel Generator Questions
    C_DG: positiveNumberValidation,
    R_DG: positiveNumberValidation,
    MO_DG: positiveNumberValidation,
    TL_DG: wholeNumberValidation
});

export const advancedWithSystemValidation = advancedValidationSchema.concat(systemTypeValidation);

export const defaultValues = ['n', 'LPSP_max_rate', 'RE_min_rate', 'e_ir_rate', 'n_ir_rate', 'ir', 're_incentives_rate'];